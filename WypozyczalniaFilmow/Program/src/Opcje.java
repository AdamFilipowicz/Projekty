import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/*
 *  Klasa Opcje
 *
 *  Klasa pozwala na zmiane hasla, adresu i nazwiska dla zalogowanego konta.
 *  Pozwala usunac konto i sprawdzic historie wypozyczen dla konta.
 *  Wyswietla nazwe, nazwisko i adres konta oraz liste filmow (po 5 na kazdej stronie).
 *  Pozwala na przemieszczanie sie po stronach z filmami oraz wyswietla ilosc pozostalych filmow.
 *  Pozwala takze na wylogowanie sie z konta czyli powrot do menu klienta.
 *
 *  Autor: Adam Filipowicz
 *  Data: 31 maja 2017 r.
 */
public class Opcje extends javax.swing.JFrame {
    protected static MenuKlient klientMenu;
    protected static WypozyczFilm wypozycz;
    private String nazwaKonta;
    private int numerStrony;
    private int iloscFilmu;
    protected Wypozyczalnia wypozyczalnia;
    protected static JOptionUserDialog UI = new JOptionUserDialog();
    
    private Opcje(){}
    
    public Opcje(String nazwaKonta, Wypozyczalnia wypozyczalnia) throws SQLException {
        initComponents();
        this.nazwaKonta = nazwaKonta;
        this.wypozyczalnia = wypozyczalnia;
        String nazwisko = wypozyczalnia.getNazwisko(nazwaKonta);
        String adres = wypozyczalnia.getAdres(nazwaKonta);
        nazwaText.setText("Nazwa konta: " + nazwaKonta);
        nazwiskoText.setText("Nazwisko: " + nazwisko);
        adresText.setText("Adres: " + adres);
        numerStrony=1;
        aktualizujFilmyIDostepnosc();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        zmienHasloButton = new javax.swing.JButton();
        zmienAdresButton = new javax.swing.JButton();
        zmienNazwiskoButton = new javax.swing.JButton();
        usunKontoButton = new javax.swing.JButton();
        przejrzyjHistorieButton = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        film1Button = new javax.swing.JButton();
        film2Button = new javax.swing.JButton();
        film3Button = new javax.swing.JButton();
        film4Button = new javax.swing.JButton();
        film5Button = new javax.swing.JButton();
        poprzedniaStronaButton = new javax.swing.JButton();
        nastepnaStronaButton = new javax.swing.JButton();
        wylogujButton = new javax.swing.JButton();
        numerStronyText = new javax.swing.JTextField();
        nazwaText = new javax.swing.JTextField();
        nazwiskoText = new javax.swing.JTextField();
        adresText = new javax.swing.JTextField();
        niedostepny1Text = new javax.swing.JTextField();
        niedostepny2Text = new javax.swing.JTextField();
        niedostepny3Text = new javax.swing.JTextField();
        niedostepny4Text = new javax.swing.JTextField();
        niedostepny5Text = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 500));

        zmienHasloButton.setText("Zmien haslo");
        zmienHasloButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zmienHasloButtonActionPerformed(evt);
            }
        });

        zmienAdresButton.setText("Zmien adres");
        zmienAdresButton.setToolTipText("");
        zmienAdresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zmienAdresButtonActionPerformed(evt);
            }
        });

        zmienNazwiskoButton.setText("Zmien nazwisko");
        zmienNazwiskoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zmienNazwiskoButtonActionPerformed(evt);
            }
        });

        usunKontoButton.setText("Usun konto");
        usunKontoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usunKontoButtonActionPerformed(evt);
            }
        });

        przejrzyjHistorieButton.setText("Przejrzyj historie wypozyczen");
        przejrzyjHistorieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                przejrzyjHistorieButtonActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);
        jTextField1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("Opcje konta");

        jTextField2.setEditable(false);
        jTextField2.setText("Zalogowano na konto:");

        jTextField3.setEditable(false);
        jTextField3.setText("Lista filmow:");

        film1Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film1ButtonActionPerformed(evt);
            }
        });

        film2Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film2ButtonActionPerformed(evt);
            }
        });

        film3Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film3ButtonActionPerformed(evt);
            }
        });

        film4Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film4ButtonActionPerformed(evt);
            }
        });

        film5Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                film5ButtonActionPerformed(evt);
            }
        });

        poprzedniaStronaButton.setText("Poprzednia strona");
        poprzedniaStronaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poprzedniaStronaButtonActionPerformed(evt);
            }
        });

        nastepnaStronaButton.setText("Nastepna strona");
        nastepnaStronaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nastepnaStronaButtonActionPerformed(evt);
            }
        });

        wylogujButton.setText("Wyloguj");
        wylogujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wylogujButtonActionPerformed(evt);
            }
        });

        numerStronyText.setEditable(false);
        numerStronyText.setText("Strona: ");

        nazwaText.setEditable(false);
        nazwaText.setText("Nazwa konta:");

        nazwiskoText.setEditable(false);
        nazwiskoText.setText("Nazwisko: ");

        adresText.setEditable(false);
        adresText.setText("Adres:");

        niedostepny1Text.setEditable(false);

        niedostepny2Text.setEditable(false);

        niedostepny3Text.setEditable(false);

        niedostepny4Text.setEditable(false);

        niedostepny5Text.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(przejrzyjHistorieButton)
                        .addGap(174, 174, 174)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(numerStronyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(114, 114, 114))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(poprzedniaStronaButton)
                                        .addGap(151, 151, 151))
                                    .addComponent(nastepnaStronaButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(niedostepny1Text, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                    .addComponent(niedostepny5Text)
                                    .addComponent(niedostepny4Text)
                                    .addComponent(niedostepny3Text)
                                    .addComponent(niedostepny2Text))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(film3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(film2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(film1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(film4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(film5Button, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nazwiskoText)
                                    .addComponent(nazwaText)
                                    .addComponent(adresText))
                                .addGap(81, 81, 81))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(zmienHasloButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(zmienAdresButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(zmienNazwiskoButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(usunKontoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(wylogujButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(121, 121, 121))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nazwaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nazwiskoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adresText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(zmienHasloButton)
                .addGap(38, 38, 38)
                .addComponent(zmienAdresButton)
                .addGap(43, 43, 43)
                .addComponent(zmienNazwiskoButton)
                .addGap(40, 40, 40)
                .addComponent(usunKontoButton)
                .addGap(103, 103, 103))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(wylogujButton)
                        .addGap(29, 29, 29)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(film1Button, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(niedostepny1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(film2Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(niedostepny2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(film3Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(niedostepny4Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(film4Button, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(niedostepny3Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(film5Button, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(niedostepny5Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numerStronyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(poprzedniaStronaButton)
                        .addComponent(przejrzyjHistorieButton))
                    .addComponent(nastepnaStronaButton))
                .addGap(35, 35, 35))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metoda po nacisnieciu guzika wylogowuje sie i wraca do menu klienta.
     * @param evt - nacisniecie guzika powoduje wylogowanie sie i powrot do menu klienta
     */
    private void wylogujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wylogujButtonActionPerformed
        klientMenu = new MenuKlient(wypozyczalnia);
        klientMenu.setResizable(false);
        klientMenu.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        klientMenu.setSize(800,500);
        klientMenu.setLocation(500,250);
        klientMenu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_wylogujButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika pozwala na zmiane hasla.
     * @param evt - nacisniecie guzika powoduje zmiane hasla
     */
    private void zmienHasloButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zmienHasloButtonActionPerformed
        String noweHaslo;
        String stareHaslo;

        UI.printMessage("\nZMIANA HASLA DO KONTA");
        stareHaslo = UI.enterString("Podaj stare haslo: ");
        noweHaslo = UI.enterString("Podaj nowe haslo: ");
        if (noweHaslo.equals("")){
            UI.printErrorMessage("Haslo nie moze byc puste");
            return;
        }
        try {
            if(wypozyczalnia.sprawdzHaslo(stareHaslo, nazwaKonta)){
                wypozyczalnia.setHaslo(stareHaslo, noweHaslo, nazwaKonta);
                UI.printInfoMessage("\nHaslo zostalo zmienione");
                return;
            }
        } catch (Exception e) {
            UI.printErrorMessage(e.getMessage());
            return;
        }
        UI.printErrorMessage("Podano bledne stare haslo!");
    }//GEN-LAST:event_zmienHasloButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika pozwala na zmiane adresu.
     * @param evt - nacisniecie guzika powoduje zmiane adresu
     */
    private void zmienAdresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zmienAdresButtonActionPerformed
        String nowyAdres;

        UI.printMessage("\nZMIANA ADRESU WLASCICIELA KONTA");
        nowyAdres = UI.enterString("Podaj adres: ");
        if (nowyAdres.equals("")){
            UI.printErrorMessage("Adres nie moze byc pusty");
            return;
        }
        UI.printInfoMessage("\nAdres zostal zmieniony");
        try {
            wypozyczalnia.setAdres(nowyAdres, nazwaKonta);
            adresText.setText("Adres: "+wypozyczalnia.getAdres(nazwaKonta));
        } catch (Exception e) {
            UI.printErrorMessage(e.getMessage());
            return;
        }
    }//GEN-LAST:event_zmienAdresButtonActionPerformed

    /**nazwaKonta
     * Metoda po nacisnieciu guzika pozwala na zmiane nazwiska.
     * @param evt - nacisniecie guzika powoduje zmiane nazwiska
     */
    private void zmienNazwiskoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zmienNazwiskoButtonActionPerformed
        String noweNazwisko;

        UI.printMessage("\nZMIANA NAZWISKA WLASCICIELA KONTA");
        noweNazwisko = UI.enterString("Podaj nazwisko: ");
        if (noweNazwisko.equals("")){
            UI.printErrorMessage("Nazwisko nie moze byc puste");
            return;
        }
        UI.printInfoMessage("\nNazwisko zostalo zmienione");
        try {
            wypozyczalnia.setNazwisko(noweNazwisko, nazwaKonta);
            nazwiskoText.setText("Nazwisko: "+wypozyczalnia.getNazwisko(nazwaKonta));
        } catch (Exception e) {
            UI.printErrorMessage(e.getMessage());
            return;
        }
    }//GEN-LAST:event_zmienNazwiskoButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika pozwala na usuniecie konta.
     * @param evt - nacisniecie guzika powoduje usuniecie konta
     */
    private void usunKontoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usunKontoButtonActionPerformed
        String odpowiedz;
        String haslo;
        UI.printMessage("\nUSUWANIE KONTA");
        haslo = UI.enterString("Podaj haslo: ");
        try {
            if(wypozyczalnia.sprawdzHaslo(haslo, nazwaKonta)){
                odpowiedz = UI.enterString("Czy na pewno usunac to konto? (TAK/NIE)");
                if (!odpowiedz.equals("TAK")) {
                    UI.printErrorMessage("\nKonto nie zostalo usuniete");
                    return;
                }
                wypozyczalnia.usunKonto(nazwaKonta);
                UI.printInfoMessage("\nKonto zostalo usuniete");
                klientMenu.setVisible(true);
                this.setVisible(false);
                return;
            }
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
        UI.printErrorMessage("Podano bledne haslo!");
    }//GEN-LAST:event_usunKontoButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika pozwala na wyswietlenie historii zakupow.
     * @param evt - nacisniecie guzika powoduje wyswietlenie historii zakupow
     */
    private void przejrzyjHistorieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_przejrzyjHistorieButtonActionPerformed
        UI.printMessage("\nHISTORIA ZAKUPOW");
        try {
            UI.printInfoMessage(wypozyczalnia.wyswietlHistorieWypozyczenKlienta(nazwaKonta));
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_przejrzyjHistorieButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika pozwala na zmiane strony na poprzednia (minimalnie 1).
     * @param evt - nacisniecie guzika powoduje zmiane strony
     */
    private void poprzedniaStronaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poprzedniaStronaButtonActionPerformed
        if(numerStrony>1){
            numerStrony--;
            try {
                aktualizujFilmyIDostepnosc();
            } catch (Exception ex) {
                UI.printErrorMessage(ex.getMessage());
                return;
            }
        }
    }//GEN-LAST:event_poprzedniaStronaButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika pozwala na zmiane strony na nastepna.
     * @param evt - nacisniecie guzika powoduje zmiane strony
     */
    private void nastepnaStronaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nastepnaStronaButtonActionPerformed
        numerStrony++;
        try {
            aktualizujFilmyIDostepnosc();
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_nastepnaStronaButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika przechodzi do wypozyczenia podanego filmu.
     * @param evt - nacisniecie guzika powoduje przejscie do wypozyczenia filmu
     */
    private void film1ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film1ButtonActionPerformed
        if(film1Button.getText()==null){
            return;
        }
        try {
            if(wypozyczalnia.znajdzFilm(film1Button.getText())){
                wypozycz = new WypozyczFilm(nazwaKonta,film1Button.getText(),wypozyczalnia);
                wypozycz.setResizable(false);
                wypozycz.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                wypozycz.setSize(800,500);
                wypozycz.setLocation(500,250);
                wypozycz.setVisible(true);
                this.dispose();
            }
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film1ButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika przechodzi do wypozyczenia podanego filmu.
     * @param evt - nacisniecie guzika powoduje przejscie do wypozyczenia filmu
     */
    private void film2ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film2ButtonActionPerformed
        if(film2Button.getText()==null){
            return;
        }
        try {
            if(wypozyczalnia.znajdzFilm(film2Button.getText())){
                wypozycz = new WypozyczFilm(nazwaKonta,film2Button.getText(),wypozyczalnia);
                wypozycz.setResizable(false);
                wypozycz.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                wypozycz.setSize(800,500);
                wypozycz.setLocation(500,250);
                wypozycz.setVisible(true);
                this.dispose();
            }
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film2ButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika przechodzi do wypozyczenia podanego filmu.
     * @param evt - nacisniecie guzika powoduje przejscie do wypozyczenia filmu
     */
    private void film3ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film3ButtonActionPerformed
        if(film3Button.getText()==null){
            return;
        }
        try {
            if(wypozyczalnia.znajdzFilm(film3Button.getText())){
                wypozycz = new WypozyczFilm(nazwaKonta,film3Button.getText(),wypozyczalnia);
                wypozycz.setResizable(false);
                wypozycz.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                wypozycz.setSize(800,500);
                wypozycz.setLocation(500,250);
                wypozycz.setVisible(true);
                this.dispose();
            }
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film3ButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika przechodzi do wypozyczenia podanego filmu.
     * @param evt - nacisniecie guzika powoduje przejscie do wypozyczenia filmu
     */
    private void film4ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film4ButtonActionPerformed
        if(film4Button.getText()==null){
            return;
        }
        try {
            if(wypozyczalnia.znajdzFilm(film4Button.getText())){
                wypozycz = new WypozyczFilm(nazwaKonta,film4Button.getText(),wypozyczalnia);
                wypozycz.setResizable(false);
                wypozycz.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                wypozycz.setSize(800,500);
                wypozycz.setLocation(500,250);
                wypozycz.setVisible(true);
                this.dispose();
            }
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film4ButtonActionPerformed

    /**
     * Metoda po nacisnieciu guzika przechodzi do wypozyczenia podanego filmu.
     * @param evt - nacisniecie guzika powoduje przejscie do wypozyczenia filmu
     */
    private void film5ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_film5ButtonActionPerformed
        if(film5Button.getText()==null){
            return;
        }
        try {
            if(wypozyczalnia.znajdzFilm(film5Button.getText())){
                wypozycz = new WypozyczFilm(nazwaKonta,film5Button.getText(),wypozyczalnia);
                wypozycz.setResizable(false);
                wypozycz.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                wypozycz.setSize(800,500);
                wypozycz.setLocation(500,250);
                wypozycz.setVisible(true);
                this.dispose();
            }
        } catch (Exception ex) {
            UI.printErrorMessage(ex.getMessage());
            return;
        }
    }//GEN-LAST:event_film5ButtonActionPerformed

    
    /**
     * Metoda aktualizuje numer strony, nazwy filmow na guzikach oraz znaczniki czy film jest dostepny czy nie.
     * Metoda wywolywana przy inicjalizacji klasy oraz przy zmianie strony filmow.
     */
    public void aktualizujFilmyIDostepnosc() throws SQLException{
        numerStronyText.setText("Strona: "+numerStrony);
        film1Button.setText(wypozyczalnia.znajdzNazweFilmu((numerStrony-1)*5));
        film2Button.setText(wypozyczalnia.znajdzNazweFilmu((numerStrony-1)*5+1));
        film3Button.setText(wypozyczalnia.znajdzNazweFilmu((numerStrony-1)*5+2));
        film4Button.setText(wypozyczalnia.znajdzNazweFilmu((numerStrony-1)*5+3));
        film5Button.setText(wypozyczalnia.znajdzNazweFilmu((numerStrony-1)*5+4));
        if(film1Button.getText()==null){
            niedostepny1Text.setText("");
        }
        else{
            iloscFilmu=wypozyczalnia.znajdzIloscFilmu(film1Button.getText());
            if(iloscFilmu==0){
                niedostepny1Text.setText("NIEDOSTEPNY");
            }
            else{
                niedostepny1Text.setText("Liczba sztuk: "+iloscFilmu);
            }
        }
        if(film2Button.getText()==null){
            niedostepny2Text.setText("");
        }
        else{
            iloscFilmu=wypozyczalnia.znajdzIloscFilmu(film2Button.getText());
            if(iloscFilmu==0){
                niedostepny2Text.setText("NIEDOSTEPNY");
            }
            else{
                niedostepny2Text.setText("Liczba sztuk: "+iloscFilmu);
            }
        }
        if(film3Button.getText()==null){
            niedostepny3Text.setText("");
        }
        else{
            iloscFilmu=wypozyczalnia.znajdzIloscFilmu(film3Button.getText());
            if(iloscFilmu==0){
                niedostepny3Text.setText("NIEDOSTEPNY");
            }
            else{
                niedostepny3Text.setText("Liczba sztuk: "+iloscFilmu);
            }
        }
        if(film4Button.getText()==null){
            niedostepny4Text.setText("");
        }
        else{
            iloscFilmu=wypozyczalnia.znajdzIloscFilmu(film4Button.getText());
            if(iloscFilmu==0){
                niedostepny4Text.setText("NIEDOSTEPNY");
            }
            else{
                niedostepny4Text.setText("Liczba sztuk: "+iloscFilmu);
            }
        }
        if(film5Button.getText()==null){
            niedostepny5Text.setText("");
        }
        else{
            iloscFilmu=wypozyczalnia.znajdzIloscFilmu(film5Button.getText());
            if(iloscFilmu==0){
                niedostepny5Text.setText("NIEDOSTEPNY");
            }
            else{
                niedostepny5Text.setText("Liczba sztuk: "+iloscFilmu);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Opcje.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Opcje().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adresText;
    private javax.swing.JButton film1Button;
    private javax.swing.JButton film2Button;
    private javax.swing.JButton film3Button;
    private javax.swing.JButton film4Button;
    private javax.swing.JButton film5Button;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JButton nastepnaStronaButton;
    private javax.swing.JTextField nazwaText;
    private javax.swing.JTextField nazwiskoText;
    private javax.swing.JTextField niedostepny1Text;
    private javax.swing.JTextField niedostepny2Text;
    private javax.swing.JTextField niedostepny3Text;
    private javax.swing.JTextField niedostepny4Text;
    private javax.swing.JTextField niedostepny5Text;
    private javax.swing.JTextField numerStronyText;
    private javax.swing.JButton poprzedniaStronaButton;
    private javax.swing.JButton przejrzyjHistorieButton;
    private javax.swing.JButton usunKontoButton;
    private javax.swing.JButton wylogujButton;
    private javax.swing.JButton zmienAdresButton;
    private javax.swing.JButton zmienHasloButton;
    private javax.swing.JButton zmienNazwiskoButton;
    // End of variables declaration//GEN-END:variables
}
